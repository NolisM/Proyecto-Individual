{"version":3,"sources":["actions/index.js","components/Buscador/buscador.js","components/Razas/raza.js","components/NavBar/NavBar.js","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["ADD_BREED","GET_BREED","GET_BREED_DETAIL","getbreedDetail","raza_perro","dispatch","fetch","then","response","json","type","payload","Buscador","props","state","breed","className","name","selected","value","label","this","map","m","onClick","to","id","imdbID","Component","connect","breedLoaded","getbreed","console","log","addbreed","dogs","Raza","match","params","React","Breed","BreedDetail","NavBar","href","window","location","assign","App","path","element","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","breedDetail","rootReducer","action","concat","Search","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41360860.chunk.js","sourcesContent":["export const ADD_BREED ='ADD_BREED'\r\nexport const GET_BREED ='GET_BREED'\r\nexport const GET_BREED_DETAIL='GET_BREED_DETAIL'\r\n\r\n\r\nexport function addbreed(payload) { // AGREGAR RAZAS\r\n    return { type: ADD_BREED, payload };\r\n}\r\n\r\nexport function getbreed() {\r\n    console.log('entre a getbreed')\r\n    return function(dispatch) {\r\n        return fetch(\"http://localhost/3001/dogs\") // pedido a la api https://thedogapi.com/?apikey=17cfe82f-15fd-480a-9d1f-56af7c60c05f\r\n        .then(response => response.json())// transformamos la info a objeto\r\n        .then(json => {\r\n            console.log(json)\r\n            dispatch({ type: GET_BREED, payload: json }); //dispacho la informacion y para que reciba el reducer\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function getbreedDetail(raza_perro) {\r\n    return function(dispatch) {\r\n        return fetch(`https://thedogapi.com/?apikey=17cfe82f-15fd-480a-9d1f-56af7c60c05f&q=${raza_perro}`) //traigo la RAZA  x su id \r\n        .then(response => response.json())\r\n        .then(json => {\r\n            dispatch({ type: GET_BREED_DETAIL, // despacho la ccion\r\n            payload: json });\r\n        });\r\n    };\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export function removebreedFavorite(id) { // para eliminar las RAZAS \r\n    \r\n//     return { \r\n//         type:  REMOVE_breed_FAVORITES, // accion \r\n//         payload: id // id de la peli a eliminar\r\n//     };\r\n// }\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { getbreed, addbreed, getbreedDetail } from '../../actions';\r\nimport './Buscador.css';\r\n\r\n\r\n\r\nexport class Buscador extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        breed: \"\"\r\n        };\r\n\r\n    }\r\n    // handleChange(event) {\r\n    // this.setState({ breed: event.target.value });\r\n    // }\r\n    // handleSubmit(event) {\r\n    //     event.preventDefault();\r\n    //     this.props.getbreed(this.state.breed);\r\n    // }\r\n\r\n    render() {\r\n        // const { breed } = this.state;\r\n        return (\r\n        <div>\r\n            <li className=\"list-item\">\r\n            <label>raza</label>\r\n                <select name=\"OS\">\r\n                <option selected value=\"0\"  > Elige una opci√≥n </option>\r\n                    <optgroup label=\"Microsoft\"> \r\n                    <option value=\"1\">Windows Vista</option> \r\n                    <option value=\"2\">Windows 7</option> \r\n                    <option value=\"3\">Windows XP</option> \r\n                </optgroup> \r\n                <optgroup label=\"Linux\"> \r\n                    <option value=\"10\">Fedora</option> \r\n                    <option value=\"11\">Debian</option> \r\n                    <option value=\"12\">Suse</option> \r\n                </optgroup> \r\n                </select>\r\n            </li>\r\n\r\n\r\n\r\n            {/* <h2>Buscador</h2>\r\n            <form className=\"form-container\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                <div>\r\n                    <label className=\"label\" htmlFor=\"title\">Razas de perros: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"Races\"\r\n                        autoComplete=\"off\"\r\n                        value={breed}\r\n                        onChange={(e) => this.handleChange(e)}\r\n                    /> */}\r\n                {/* </div>\r\n                <button type=\"submit\">BUSCAR</button>\r\n            </form> */}\r\n            <ul>\r\n            {\r\n                this.props.breed?.map(m =>(    // mapeo el array de peliculas que me trae para buscarla\r\n                    <div key={m.imdbID}>\r\n                        <Link onClick={() => this.props.getbreedDetail(m)} to={`/Dogs/${m.id}`}>\r\n                        {m.breed } \r\n                        </Link>\r\n            \r\n                    </div> \r\n                )) \r\n            }\r\n            </ul>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nconst mapdispachtoprops=(dispatch)=>{\r\n    return {\r\n        getbreed: breed => dispatch(getbreed(breed)),\r\n        addbreed: dogs => dispatch(addbreed(dogs)),\r\n        getbreedDetail: breed => dispatch(getbreedDetail(breed.imdbID))\r\n    }\r\n}\r\n\r\nconst mapstatetoprops=(state)=>{\r\n    return{\r\n    breed: state.breedLoaded\r\n    }\r\n}\r\n\r\nexport default connect(mapstatetoprops,mapdispachtoprops)(Buscador);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getbreedDetail } from '../../actions/index';\r\n\r\n//import './raza.css';\r\n\r\nclass Raza extends React.Component {\r\n\r\n    componentDidMount(){ /// se ejecuta despues del primer render\r\n       // const movieDetail=this.props.match.params.id\r\n       this.props.getbreedDetail(this.props.match.params.id) // ca extraigo por medio del match y params y saco el id\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"Raza-detail\">\r\n                \r\n                    <h3>detalles de la raza</h3>\r\n                    {/* <h2>{this.props.movie.Director}</h2>\r\n                    <h2>{this.props.movie.Actors}</h2>\r\n                    <h1>{this.props.movie.Year}</h1>\r\n                    <p>{this.props.movies.Plots}</p> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapstatetoprops=(state)=>{\r\n    return{\r\n        Breed: state.BreedDetail\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getbreedDetail: id => dispatch(getbreedDetail(id))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapstatetoprops, mapDispatchToProps)(Raza);","import React from 'react';\r\n//import { NavLink } from 'react-router-dom';\r\nimport { buscador } from '../Buscador/buscador';\r\n\r\n\r\n\r\n\r\nimport './NavBar.css';\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <header >            \r\n            <center>\r\n                \r\n                <pre className='text' > Welcome <br/>\r\n                                    to the Dogs Page \r\n                </pre>\r\n                \r\n               \r\n            </center>\r\n            <center>\r\n\r\n            <nav >\r\n                <ul className=\"list\">\r\n                    <li className=\"list-item\">\r\n                        \r\n                        <button className='button' href='#'  onClick={()=> window.location.assign('/')}>Login</button>\r\n                        \r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            </center>\r\n            \r\n        </header>\r\n    )\r\n}","import './App.css';\nimport React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Buscador from './components/Buscador/buscador';\nimport Raza from './components/Razas/raza';\nimport NavBar from './components/NavBar/NavBar';\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/nav\" element={<NavBar />} />\n        <Route exact path=\"/\" element={<Buscador/>} />\n        <Route path=\"/breed/:id\" element={<Raza/>} />\n      </Routes>\n    </BrowserRouter>\n);\n\n\n\n  // return (\n  //   <div className=\"App\">\n  //     <h1>Henry Dogs</h1>\n  //   </div>\n  // );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_BREED, GET_BREED, GET_BREED_DETAIL } from '../actions'\r\n\r\nconst initialState = {\r\n    addbreed: [],\r\n    breedLoaded: [],\r\n    breedDetail: {}\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    if (action.type === ADD_BREED) { /// para agrgar las razas a base de datos\r\n        return {\r\n            ...state,\r\n            addbreed: state.addbreed.concat(action.payload)\r\n        }\r\n    }\r\n    if (action.type === GET_BREED) {\r\n        return {// retorno el nuevo estado\r\n            ...state,// estado anterior\r\n            breedLoaded: action.payload.Search // agrego el nuevo estado y lo concateno con la anterior\r\n        };\r\n        \r\n    }\r\n    if (action.type === GET_BREED_DETAIL) {\r\n        return {\r\n            ...state,\r\n            breedDetail: action.payload\r\n            \r\n        };\r\n    }\r\n\r\n    \r\n    return state;\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// if (action.type === REMOVE_MOVIES_FAVORITES) {\r\n//     console.log(state.moviesFavourites, action.payload)\r\n//         return {\r\n//         ...state,\r\n//         moviesFavourites: state.moviesFavourites.filter(m => m.imdbID !== action.payload) // filtro el array y elimino x el id\r\n        \r\n//     };\r\n// }\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducer/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\r\n    ))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App  />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}